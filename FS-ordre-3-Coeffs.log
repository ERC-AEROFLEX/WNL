-- FreeFem++ v  3.530000 (date mar. 25 avr. 2017 10:07:35)
 Load: lg_fem lg_mesh lg_mesh3 eigenvalue
    1 : load "MUMPS_seq"(load: loadLibary C:\Program Files (x86)\FreeFem++\\.\MUMPS_seq = 0)
    2 :
    3 : //////////////////
    4 : //  Parametres ///
    5 : //////////////////
    6 :
    7 : real Re=40;
    8 : real rho=50;
    9 : real omegas=0.657;
   10 : real gammas=0.0;
   11 : int nummesh=3;
   12 : int modeA=1;
   13 : int modeAadj=1;
   14 :
   15 : real nu=1./Re;
   16 :
   17 :
   18 : cout << "-----------------------------------------" << endl;
   19 : cout << "--- Re        =  " << Re << endl;
   20 : cout << "--- rhos/rhof =  " << rho << endl;
   21 : cout << "--- omegas    =  " << omegas << endl;
   22 : cout << "-----------------------------------------" << endl;
   23 :
   24 : mesh th=readmesh("../../mesh/mesh-"+nummesh+".msh");
   25 :
   26 : fespace fp(th,P1);
   27 : fespace fu(th,P1b);
   28 : fespace fuuppp(th,[P1b,P1b,P1,P1,P1]);
   29 :
   30 : fuuppp [ur,vr,pr,fr,gr]; complex ys1,vs1;
   31 :
   32 : fuuppp [u0,v0,p0,f0,g0]; real us0=-1;
   33 :
   34 :
   35 : fuuppp<complex> [u1A,v1A,p1A,f1A,g1A]; complex ys1A,vs1A;
   36 : fuuppp<complex> [u1Ac,v1Ac,p1Ac,f1Ac,g1Ac]; complex ys1Ac,vs1Ac;
   37 :
   38 :
   39 : fuuppp<complex> [au1A,av1A,ap1A,af1A,ag1A]; complex ays1A,avs1A;
   40 : fuuppp<complex> [au1Ac,av1Ac,ap1Ac,af1Ac,ag1Ac];
   41 : complex ays1Ac,avs1Ac;
   42 :
   43 : fuuppp<complex> [u2AAc,v2AAc,p2AAc,f2AAc,g2AAc];
   44 : complex ys2AAc,vs2AAc;
   45 : fuuppp<complex> [u2AA,v2AA,p2AA,f2AA,g2AA];
   46 : complex ys2AA,vs2AA;
   47 :
   48 : fuuppp<complex> [u313,v313,p313,f313,g313];
   49 : complex ys313,vs313;
   50 :
   51 : fuuppp<complex> [u311,v311,p311,f311,g311];
   52 : complex ys311,vs311;
   53 :
   54 : fuuppp<complex> [u33,v33,p33,f33,g33];
   55 : complex ys33,vs33;
   56 :
   57 : real lambdaA,omegaA;
   58 :
   59 : int nff=fuuppp.ndof; int nfs=2; int nft=nff+nfs;
   60 :
   61 : ///////////////////////////
   62 : ////  Variables ///////////
   63 : ///////////////////////////
   64 :
   65 : matrix<complex> A;
   66 :
   67 : complex[int] sol(nft),rhs(nft);
   68 :
   69 : ///////////////////////////
   70 : /////  Base Flow   ////////
   71 : ///////////////////////////
   72 :
   73 : {
   74 :  ifstream file("../../baseflow-wbc/Baseflow-"+nummesh+"-Re-"+Re+".txt"); 
   75 :  file >> u0[];
   76 : };
   77 :
   78 : ////////////////////////
   79 : /////  Mode A   ////////
   80 : ////////////////////////
   81 :
   82 : complex eig;
   83 :
   84 : {
   85 :  ifstream file("../../stabfs-wbc/Re"+Re+"/Dir-Mode-Re-"+Re+"-rho-"+rho+"-gammas-"+gammas+"-omegas-"+omegas+"-mesh-"+nummesh+"-num-"+modeA+".dat");
   86 :  file >> eig ;
   87 :  file >> sol ;
   88 : };
   89 :
   90 : lambdaA=real(eig); omegaA=imag(eig);
   91 : u1A[]=sol(0:nff-1); ys1A=sol(nft-2); vs1A=sol(nft-1);
   92 : [u1Ac,v1Ac,p1Ac,f1Ac,g1Ac]=[conj(u1A),conj(v1A),conj(p1A),conj(f1A),conj(g1A)];
   93 : ys1Ac=conj(sol(nft-2)); vs1Ac=conj(sol(nft-1));
   94 :
   95 : cout << "eigA= " << eig << endl;
   96 :
   97 : [ur,vr,pr,fr,gr]=[real(u1A),real(v1A),real(p1A),real(f1A),real(g1A)];
   98 : plot(ur,value=1,wait=1,cmm="u1A-r");
   99 :
  100 :
  101 : ////////////////////////////////
  102 : ///// Adjoint  Mode A   ///////
  103 : ///////////////////////////////
  104 :
  105 :
  106 : {
  107 :  ifstream file("../../stabfs-wbc/Re"+Re+"/Adj-Mode-Re-"+Re+"-rho-"+rho+"-gammas-"+gammas+"-omegas-"+omegas+"-mesh-"+nummesh+"-num-"+modeAadj+".dat");
  108 :  file >> eig ;
  109 :  file >> sol ;
  110 : };
  111 :
  112 : au1A[]=sol(0:nff-1); ays1A=sol(nft-2); avs1A=sol(nft-1);
  113 :
  114 :
  115 : cout << "Adj-eigA= " << eig << endl;
  116 :
  117 : complex Normeaf,Normeas,Normea;
  118 :
  119 : Normeaf=int2d(th)(conj(au1A)*u1A+conj(av1A)*v1A);
  120 : Normeas=conj(ays1A)*ys1A+conj(avs1A)*vs1A;
  121 :
  122 : Normea=Normeaf+Normeas;
  123 :
  124 : au1A[]*=1/conj(Normea);
  125 : ays1A*=1./conj(Normea);
  126 : avs1A*=1./conj(Normea);
  127 :
  128 : Normeaf=int2d(th)(conj(au1A)*u1A+conj(av1A)*v1A);
  129 : Normeas=conj(ays1A)*ys1A+conj(avs1A)*vs1A;
  130 :
  131 : Normea=Normeaf+Normeas;
  132 :
  133 : cout << "Normeaf= " << Normeaf << endl;
  134 : cout << "Normeas= " << Normeas << endl;
  135 : cout << "Normea= " << Normea << endl;
  136 :
  137 : [ur,vr,pr,fr,gr]=[real(au1A),real(av1A),real(ap1A),real(af1A),real(ag1A)];
  138 : plot(ur,value=1,wait=1,cmm="Adj-u1A-r");
  139 :
  140 :
  141 : /////////////////////
  142 : /////  Mode AA  /////
  143 : /////////////////////
  144 :
  145 :
  146 : {
  147 : ifstream file("u2-AA-Re-"+Re+"-rho-"+rho+"-gammas-"+gammas+"-omegas-"+omegas+"-mesh-"+nummesh+"-num-"+modeA+".txt");
  148 : file >> sol ;
  149 : };
  150 :
  151 : u2AA[]=sol(0:nff-1); ys2AA=sol(nft-2); vs2AA=sol(nft-1);
  152 :
  153 : [ur,vr,pr,fr,gr]=[real(u2AA),real(v2AA),real(p2AA),real(f2AA),real(g2AA)];
  154 : plot(ur,value=1,wait=1,cmm="u2AA-r");
  155 :
  156 :
  157 : //////////////////////
  158 : /////  Mode AAc  /////
  159 : //////////////////////
  160 :
  161 : {
  162 : ifstream file("u2-AAc-Re-"+Re+"-rho-"+rho+"-gammas-"+gammas+"-omegas-"+omegas+"-mesh-"+nummesh+"-num-"+modeA+".txt");
  163 : file >> sol ;
  164 : };
  165 :
  166 : u2AAc[]=sol(0:nff-1); ys2AAc=sol(nft-2); vs2AAc=sol(nft-1);
  167 :
  168 : [ur,vr,pr,fr,gr]=[real(u2AAc),real(v2AAc),real(p2AAc),real(f2AAc),real(g2AAc)];
  169 : plot(ur,value=1,wait=1,cmm="u2AAc-r");
  170 :
  171 :
  172 : fu<complex> betafield,betamfield,betahfield;
  173 : fu umode;
  174 :
  175 :
  176 : cout << "Construction vecteur - Coeff Mean Flow " << endl;
  177 :
  178 :
  179 :
  180 : varf vMff([u,v,p,f,g],[ut,vt,pt,ft,gt]) =
  181 :  int2d(th)( (u*ut+v*vt) + 1.e-16*(p*pt+f*ft+g*gt))
  182 :  +int1d(th,2)(f*ut+g*vt)
  183 :  +int1d(th,2)(u*ft+v*gt)
  184 :  +on(4,v=1)+on(1,u=1.,v=1.);
  185 :
  186 : matrix<complex> Mff = vMff(fuuppp,fuuppp,tgv=-1);
  187 :
  188 : load "MUMPS_seq" (already loaded : MUMPS_seq )
  189 :
  190 : set(Mff,solver=sparsesolver);
  191 :
  192 : fuuppp<complex> [ru,rv,rp,rf,rg];
  193 : fuuppp<complex> [su,sv,sp,sf,sg];
  194 :
  195 :
  196 : varf vrhsmean([u,v,p,f,g],[ut,vt,pt,ft,gt]) =
  197 :  int2d(th)(( u1A*dx(u2AAc) + (v1A-vs1A)*dy(u2AAc) )*ut
  198 :            +( u1A*dx(v2AAc) + (v1A-vs1A)*dy(v2AAc) )*vt
  199 :            +( u2AAc*dx(u1A) + (v2AAc-vs2AAc)*dy(u1A) )*ut
  200 :            +( u2AAc*dx(v1A) + (v2AAc-vs2AAc)*dy(v1A) )*vt
  201 :            )+on(4,v=0.)+on(1,u=0.,v=0.);
  202 :
  203 :
  204 : ru[]=vrhsmean(0,fuuppp,tgv=1);
  205 : su[]=Mff^-1*ru[];
  206 : betamfield=conj(au1A)*su+conj(av1A)*sv;
  207 :
  208 :
  209 : umode=real(betamfield);
  210 : cout << "beta-mean-real= " << int2d(th)(umode) << endl;
  211 : plot(umode,value=1,wait=1,cmm="betar-m");
  212 :
  213 : umode=imag(betamfield);
  214 : cout << "beta-mean-imag= " << int2d(th)(umode) << endl;
  215 : plot(umode,value=1,wait=1,cmm="betai-m");
  216 :
  217 :
  218 :
  219 : varf vrhsharmo([u,v,p,f,g],[ut,vt,pt,ft,gt]) =
  220 :  int2d(th)(( u1Ac*dx(u2AA) + (v1Ac-vs1Ac)*dy(u2AA) )*ut
  221 :            +( u1Ac*dx(v2AA) + (v1Ac-vs1Ac)*dy(v2AA) )*vt
  222 :            +( u2AA*dx(u1Ac) + (v2AA-vs2AA)*dy(u1Ac) )*ut
  223 :            +( u2AA*dx(v1Ac) + (v2AA-vs2AA)*dy(v1Ac) )*vt
  224 :            )+on(4,v=0.)+on(1,u=0.,v=0.);
  225 :
  226 : ru[]=vrhsharmo(0,fuuppp,tgv=1);
  227 : su[]=Mff^-1*ru[];
  228 : betahfield=conj(au1A)*su+conj(av1A)*sv;
  229 :
  230 :
  231 : umode=real(betahfield);
  232 : cout << "beta-harmonic-real= " << int2d(th)(umode) << endl;
  233 : plot(umode,value=1,wait=1,cmm="betar-h");
  234 :
  235 : umode=imag(betahfield);
  236 : cout << "beta-harmonic-imag= " << int2d(th)(umode) << endl;
  237 : plot(umode,value=1,wait=1,cmm="betai-h");
  238 :
  239 :
  240 :
  241 :
  242 :
  243 :
  244 :  sizestack + 1024 =13680  ( 12656 )
 
-----------------------------------------
--- Re        =  40
--- rhos/rhof =  50
--- omegas    =  0.657
-----------------------------------------
  --  mesh:  Nb of Triangles =  45539, Nb of Vertices 22877
 Error openning file ../../stabfs-wbc/Re40/Dir-Mode-Re-40-rho-50-gammas-0-omegas-0.657-mesh-3-num-1.dat
  current line = 85
Exec error : Error openning file
   -- number :1
Exec error : Error openning file
   -- number :1
 err code 7 ,  mpirank 0
 try getConsole D:\marquet\Desktop\Etudes\SpringCylinder-WNL\wnl-wbc\Codes-wnl\FS-ordre-3-Coeffs.edp
