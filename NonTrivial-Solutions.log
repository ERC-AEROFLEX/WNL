-- FreeFem++ v  3.530000 (date mar. 25 avr. 2017 10:07:35)
 Load: lg_fem lg_mesh lg_mesh3 eigenvalue
    1 : load "MUMPS_seq"(load: loadLibary C:\Program Files (x86)\FreeFem++\\.\MUonsMPS_seq = 0)
    2 :
    3 : //////////////////
    4 : //  Parametres ///
    5 : //////////////////
    6 :
    7 : real rho=50;
    8 : real Rec=40;
    9 : real omegasc=0.657;
   10 : real gammas=0.0;
   11 : int nummesh=22;
   12 : int mode=1;
   13 : int modeadj=1;
   14 :
   15 : real omegasmin=0.6;
   16 : real domegas=0.01;
   17 : real omegasmax=0.7;
   18 : real omegas=omegasmin;
   19 :
   20 :
   21 : string pathmesh="mesh/";
   22 : string pathbaseflow="baseflow/";
   23 : string pathmode="stabilite/";
   24 : string pathwnl="wnl/";
   25 :
   26 : string namemesh="mesh-"+nummesh+".msh";
   27 : string namebaseflow="Baseflow-"+nummesh+"-Re-"+Rec+".txt";
   28 : string namemode="Dir-Mode-Re-"+Rec+"-rho-"+rho+"-gammas-"+gammas+"-omegaonss-"+omegasc+"-mesh-"+nummesh+"-num-"+mode+".dat";
   29 : string namemodeadj="Adj-Mode-Re-"+Rec+"-rho-"+rho+"-gammas-"+gammas+"-omonsegas-"+omegasc+"-mesh-"+nummesh+"-num-"+mode+".dat";
   30 :
   31 : string namewnl3Coeffs="Coeffs-Ordre3-Re-"+Rec+"-rho-"+rho+"-gammas-"+gamonsmas+"-omegas-"+omegasc+"-mesh-"+nummesh+"-num-"+mode+".dat";
   32 : string namewnl5Coeffs="Coeffs-Ordre5-Re-"+Rec+"-rho-"+rho+"-gammas-"+gamonsmas+"-omegas-"+omegasc+"-mesh-"+nummesh+"-num-"+mode+".dat";
   33 :
   34 :
   35 : string nameeig3="Eigenvalue-Ordre3-Re-"+Rec+"-rho-"+rho+"-gammas-"+gammaonss+"-omegas-"+omegasc+"-mesh-"+nummesh+"-num-"+mode+".dat";
   36 : string nameeig5="Eigenvalue-Ordre5-Re-"+Rec+"-rho-"+rho+"-gammas-"+gammaonss+"-omegas-"+omegasc+"-mesh-"+nummesh+"-num-"+mode+".dat";
   37 :
   38 :
   39 : string nameampli3="Amplitude-Ordre3-Re-"+Rec+"-rho-"+rho+"-gammas-"+gammonsas+"-omegas-"+omegasc+"-mesh-"+nummesh+"-num-"+mode+".dat";
   40 : string nameampli5="Amplitude-Ordre5-Re-"+Rec+"-rho-"+rho+"-gammas-"+gammonsas+"-omegas-"+omegasc+"-mesh-"+nummesh+"-num-"+mode+".dat";
   41 :
   42 :
   43 : complex alpha,alpha1,beta,beta1,beta2,gamma;
   44 : complex alphat,betat;
   45 : complex eig;
   46 : real lambdac,omegac;
   47 :
   48 : {
   49 :  ifstream file(pathmode+namemode);
   50 :  file >> eig ;
   51 : };
   52 :
   53 : lambdac=real(eig); omegac=imag(eig);
   54 :
   55 :
   56 : {
   57 : ifstream file(pathwnl+namewnl3Coeffs);
   58 : file >> alpha ;
   59 : file >> beta ;
   60 : };
   61 :
   62 : {
   63 : ifstream file(pathwnl+namewnl5Coeffs);
   64 : file >> alpha1 ;
   65 : file >> beta1 ;
   66 : file >> beta2 ;
   67 : file >> gamma ;
   68 : };
   69 :
   70 : cout << "omegasc= " << omegasc << endl;
   71 : cout << "alpha= " << alpha << endl;
   72 : cout << "beta= " << beta << endl;
   73 : cout << "alpha1= " << alpha1 << endl;
   74 : cout << "beta1= " << beta1 << endl;
   75 : cout << "beta2= " << beta2 << endl;
   76 : cout << "alpha1= " << alpha1 << endl;
   77 : cout << "gamma= " << gamma << endl;
   78 :
   79 :
   80 : //////////////////   Lineaire /////////////////////////
   81 :
   82 : {{
   83 : ofstream file5(pathwnl+nameeig5);
   84 : ofstream file3(pathwnl+nameeig3);
   85 :
   86 : real lambda,omega;
   87 :
   88 : while(omegas<=omegasmax)
   89 : {
   90 :
   91 :  lambda=(omegas*omegas-omegasc*omegasc)*real(alpha);
   92 :  omega=omegac+(omegas*omegas-omegasc*omegasc)*imag(alpha);
   93 :
   94 :  file3 << omegas << " " << lambda << " " << omega << endl;
   95 :
   96 :
   97 :  alphat=alpha+alpha1*(omegas*omegas-omegasc*omegasc);
   98 :  betat=beta+(beta1+beta2)*(omegas*omegas-omegasc*omegasc);
   99 :
  100 :  lambda=(omegas*omegas-omegasc*omegasc)*real(alphat);
  101 :  omega=omegac+(omegas*omegas-omegasc*omegasc)*imag(alphat);
  102 :
  103 :  file5 << omegas << " " << lambda << " " << omega << endl;
  104 :
  105 :
  106 :
  107 :  omegas+=domegas;
  108 :
  109 : };
  110 :
  111 : };};
  112 :
  113 :
  114 :
  115 : real Delta;
  116 : real Xp,Xm,Ap,Am;
  117 :
  118 : //////////////  Non lineaire - Ordre3  //////////////////////
  119 :
  120 : omegas=omegasmin;
  121 :
  122 :
  123 : {
  124 : ofstream file3(pathwnl+nameampli3);
  125 :
  126 :
  127 : while(omegas<=omegasmax)
  128 : {
  129 :
  130 :  Ap=-real(alpha)/real(beta)*(omegas*omegas-omegasc*omegasc);
  131 :
  132 :  if(Ap>=0)
  133 :  {
  134 :  file3 << omegas << " " << 0. << " " << sqrt(Ap) << " " << 0. << endl;
  135 :  }
  136 :  else
  137 :  {
  138 :  file3 << omegas << " " << 0. << " " << 0. << " " << 0. << endl;
  139 :  };
  140 :
  141 :  omegas+=domegas;
  142 :
  143 : };
  144 :
  145 :
  146 : };
  147 :
  148 :
  149 :
  150 :
  151 : //////////////  Non lineaire - Ordre5  //////////////////////
  152 :
  153 : omegas=omegasmin;
  154 :
  155 : {
  156 : ofstream file5(pathwnl+nameampli5);
  157 :
  158 :
  159 : while(omegas<=omegasmax)
  160 : {
  161 :
  162 : alphat=alpha+alpha1*(omegas*omegas-omegasc*omegasc);
  163 : betat=beta+(beta1+beta2)*(omegas*omegas-omegasc*omegasc);
  164 :
  165 :
  166 : Delta=real(betat)*real(betat)-4*real(gamma)*real(alphat)*(omegas*omegas-onsomegasc*omegasc);
  167 :
  168 :
  169 :
  170 : if(Delta>=0)
  171 : {
  172 :  Xp=(-real(betat)+sqrt(Delta))/(2*real(gamma));
  173 :  Xm=(-real(betat)-sqrt(Delta))/(2*real(gamma));
  174 :
  175 : cout << omegas << " " << Delta << " " << Xp << " " << Xm << endl;
  176 :
  177 :
  178 :  if(Xp>=0) Ap=sqrt(Xp);
  179 :  if(Xm>=0) Am=sqrt(Xm);
  180 :
  181 :
  182 :  if(Xp>=0)
  183 :  {
  184 :   if(Xm>=0)
  185 :   {
  186 :   file5 << omegas << " " << 0. << " " << Ap << " " << Am << endl;
  187 :   }
  188 :   else
  189 :   {
  190 :   file5 << omegas << " " << 0. << " " << Ap << " " << 0. << endl;
  191 :   };
  192 :  }
  193 :  else
  194 :  {
  195 :  file5 << omegas << " " << 0. << " " << 0. << " " << 0. << endl;
  196 :  };
  197 :
  198 : }
  199 : else
  200 : {
  201 :  file5 << omegas << " " << 0. << " " << 0. << " " << 0. << endl;
  202 : };
  203 :
  204 :
  205 : omegas+=domegas;
  206 :
  207 : };
  208 :
  209 :
  210 : }; sizestack + 1024 =3752  ( 2728 )
 
omegasc= 0.657
alpha= (0.101485,0.868171)
beta= (9.74515e-005,0.00170807)
alpha1= (1.93459,0.235517)
beta1= (-0.0117784,-0.0235002)
beta2= (-0.03236,-0.0455634)
alpha1= (1.93459,0.235517)
gamma= (0.000646466,0.00138457)
0.6 3.74852e-006 -1.02389 -4.0188
0.61 5.31789e-006 -0.324683 -3.89186
0.62 5.99653e-006 0.205606 -3.58234
0.63 5.73934e-006 0.591272 -3.11455
0.64 4.5005e-006 0.81271 -2.46888
0.65 2.23348e-006 0.768183 -1.54359
times: compile 0.292s, execution 0.041s,  mpirank:0
 ######## We forget of deleting   736 Nb pointer,   0Bytes  ,  mpirank 0, memoryons leak =0
 CodeAlloc : nb ptr  3604,  size :384688 mpirank: 0
Ok: Normal End
 try getConsole D:\marquet\Desktop\Etudes\SpringCylinder-WNL\wnl-wbc\Codes-wnl\NonsonTrivial-Solutions.edp
