  305 :            -( u1A*dx(v2AAc) + (v1A-vs1A)*dy(v2AAc) )*vt
  306 :            -( u2AAc*dx(u1A) + (v2AAc-vs2AAc)*dy(u1A) )*ut
  307 :            -( u2AAc*dx(v1A) + (v2AAc-vs2AAc)*dy(v1A) )*vt
  308 :            )+on(4,v=0.)+on(1,u=0.,v=0.);
  309 :
  310 :
  311 : fuuppp<complex> [ru,rv,rp,rf,rg];
  312 : rhsaug=0.0;
  313 : ru[]=vrhs(0,fuuppp,tgv=1);
  314 : rhsaug(0:nft-3)=ru[];
  315 : };
  316 :
  317 : cout << "Fin Construction vecteur " << endl;
  318 :
  319 :
  320 : cout << "Resolution " << endl;
  321 : solaug=A^-1*rhsaug;
  322 :
  323 : complex betamean=-solaug(nft);
  324 : cout << "beta-mean= " << betamean << endl;
  325 :
  326 :
  327 : {
  328 : ofstream file(pathwnl+namewnl3AAAc);
  329 : file << solaug << endl;
  330 : };
  331 :
  332 :
  333 : cout << "Construction vecteur - Coeff Harmonic " << endl;
  334 :
  335 : {
  336 :   varf vrhs([u,v,p,f,g],[ut,vt,pt,ft,gt]) =
  337 :  int2d(th)(-( u1Ac*dx(u2AA) + (v1Ac-vs1Ac)*dy(u2AA) )*ut
  338 :            -( u1Ac*dx(v2AA) + (v1Ac-vs1Ac)*dy(v2AA) )*vt
  339 :            -( u2AA*dx(u1Ac) + (v2AA-vs2AA)*dy(u1Ac) )*ut
  340 :            -( u2AA*dx(v1Ac) + (v2AA-vs2AA)*dy(v1Ac) )*vt
  341 :                  )+on(4,v=0.)+on(1,u=0.,v=0.);
  342 :
  343 : fuuppp<complex> [ru,rv,rp,rf,rg];
  344 : rhsaug=0.0;
  345 : ru[]=vrhs(0,fuuppp,tgv=1);
  346 : rhsaug(0:nft-3)=ru[];
  347 : };
  348 :
  349 : cout << "Fin Construction vecteur " << endl;
  350 :
  351 :
  352 : cout << "Resolution " << endl;
  353 : solaug=A^-1*rhsaug;
  354 :
  355 : complex betaharmo=-solaug(nft);
  356 : cout << "beta-harmo= " << betaharmo << endl;
  357 :
  358 : cout << "beta-mean+harmo = " << betamean+betaharmo << endl;
  359 :
  360 :
  361 : {
  362 : ofstream file(pathwnl+namewnl3AAAcHarmo);
  363 : file << solaug << endl;
  364 : };
  365 :
  366 :
  367 :
  368 :
  369 : cout << "Construction vecteur - Coeff Total " << endl;
  370 :
  371 : {
  372 :  varf vrhs([u,v,p,f,g],[ut,vt,pt,ft,gt]) =
  373 :  int2d(th)(-( u1A*dx(u2AAc) + (v1A-vs1A)*dy(u2AAc) )*ut
  374 :            -( u1A*dx(v2AAc) + (v1A-vs1A)*dy(v2AAc) )*vt
  375 :            -( u2AAc*dx(u1A) + (v2AAc-vs2AAc)*dy(u1A) )*ut
  376 :            -( u2AAc*dx(v1A) + (v2AAc-vs2AAc)*dy(v1A) )*vt
  377 :            -( u1Ac*dx(u2AA) + (v1Ac-vs1Ac)*dy(u2AA) )*ut
  378 :            -( u1Ac*dx(v2AA) + (v1Ac-vs1Ac)*dy(v2AA) )*vt
  379 :            -( u2AA*dx(u1Ac) + (v2AA-vs2AA)*dy(u1Ac) )*ut
  380 :            -( u2AA*dx(v1Ac) + (v2AA-vs2AA)*dy(v1Ac) )*vt
  381 :                  )+on(4,v=0.)+on(1,u=0.,v=0.);
  382 :
  383 :
  384 : fuuppp<complex> [ru,rv,rp,rf,rg];
  385 : rhsaug=0.0;
  386 : ru[]=vrhs(0,fuuppp,tgv=1);
  387 : rhsaug(0:nft-3)=ru[];
  388 : };
  389 :
  390 : cout << "Fin Construction vecteur " << endl;
  391 :
  392 : cout << "Resolution " << endl;
  393 : solaug=A^-1*rhsaug;
  394 :
  395 : complex beta=-solaug(nft);
  396 : cout << "beta= " << beta << endl;
  397 :
  398 : u313[]=solaug(0:nft-1);
  399 : cout << " ys= " << solaug(nft-2) << endl;
  400 : cout << " vs= " << solaug(nft-1) << endl;
  401 : cout << " Fy= " << int1d(th,2)(g313) << endl;
  402 : [ur,vr,pr,fr,gr]=[real(u313),real(v313),real(p313),real(f313),real(g313)+Mode];
  403 : plot(ur,value=1,wait=1,cmm="Mode3-AAAc");
  404 :
  405 :
  406 : {
  407 : ofstream file(pathwnl+namewnl3AAAc);
  408 : file << solaug << endl;
  409 : };
  410 :
  411 :
  412 :
  413 :
  414 : cout << "--------------------------------" << endl;
  415 : cout << "--------------------------------" << endl;
  416 : cout << "Construction matrice - u33 " << endl;
  417 :
  418 : {
  419 :
  420 :  matrix<complex> Aff ; complex[int,int] Ass(nfs,nfs);
  421 :  fuuppp<complex> [fsu0,fsv0,fsp0,fsf0,fsg0];
  422 :  fuuppp<complex> [fsu1,fsv1,fsp1,fsf1,fsg1];
  423 :  fuuppp<complex> [fsu2,fsv2,fsp2,fsf2,fsg2];
  424 :  fuuppp<complex> [rsu0,rsv0,rsp0,rsf0,rsg0];
  425 :  fuuppp<complex> [rsu1,rsv1,rsp1,rsf1,rsg1];
  426 :  fuuppp<complex> [rsu2,rsv2,rsp2,rsf2,rsg2];
  427 :
  428 :  varf vAff([u,v,p,f,g],[ut,vt,pt,ft,gt]) =
  429 :  int2d(th)(
  430 :    3*omegaA*1i*(u*ut+v*vt)
  431 :  +( (u0-us0)*dx(u)+v0*dy(u) + u*dx(u0)+v*dy(u0) )*ut
  432 :  +( (u0-us0)*dx(v)+v0*dy(v) + u*dx(v0)+v*dy(v0) )*vt
  433 :  + nu*(dx(u)*dx(ut)+dy(u)*dy(ut))
  434 :  + nu*(dx(v)*dx(vt)+dy(v)*dy(vt))
  435 :  - (dx(ut)+dy(vt))*p
  436 :  - (dx(u)+dy(v))*pt + 1.e-16*(p*pt+f*ft+g*gt))
  437 :  +int1d(th,2)(f*ut+g*vt)
  438 :  +int1d(th,2)(u*ft+v*gt)
  439 :  +on(4,v=1)+on(1,u=1.,v=1.);
  440 :
  441 :  Aff = vAff(fuuppp,fuuppp,tgv=-1);
  442 :
  443 :  // Matrix Fluid/Solid
  444 :
  445 :  varf vvs([u,v,p,f,g],[ut,vt,pt,ft,gt]) =
  446 :  int2d(th)( - dy(u0)*ut - dy(v0)*vt )
  447 : -int1d(th,2)(gt)+ on(4,v=0.)+on(1,u=0.,v=0.);
  448 :
  449 :  fsu0[]=0.; fsu1[]=vvs(0,fuuppp,tgv=1);
  450 :
  451 : // Matrix Solid/Fluid
  452 : varf vfy([u,v,p,f,g],[ut,vt,pt,ft,gt]) = int1d(th,2)( -(4./pi/rho)*gt );+Mode 
  453 :
  454 :  rsu0[]=0.; rsu1[]=vfy(0,fuuppp);
  455 :
  456 :  /// Matrix Solid/Solid
  457 :
  458 :
  459 :  Ass(0,0)=omegaA*1i; Ass(0,1)=-1;
  460 :  Ass(1,1)=omegaA*1i; Ass(1,0)=omegas*omegas;
  461 :
  462 :
  463 : // Added terms
  464 :
  465 :  varf vd([u,v,p,f,g],[ut,vt,pt,ft,gt]) =
  466 :  int2d(th)( u1A*ut +v1A*vt );
  467 :
  468 :  varf va([u,v,p,f,g],[ut,vt,pt,ft,gt]) =
  469 :  int2d(th)( au1A*ut + av1A*vt );
  470 :
  471 :  fsu2[]=vd(0,fuuppp);
  472 :  rsu2[]=va(0,fuuppp);
  473 :
  474 : cout << "Assemblage matrice" << endl;
  475 :
  476 :  A = [
  477 :   [Aff     ,  fsu0[]    , fsu1[]      ] ,
  478 :   [rsu0[]' ,  Ass(0,0)  , Ass(0,1)    ] ,
  479 :   [rsu1[]' ,  Ass(1,0)  , Ass(1,1)    ]
  480 :   ];
  481 :
  482 : cout << "Fin Construction matrice" << endl;
  483 :
  484 : };
  485 :
  486 : cout << "Factorisation matrice " << endl;
  487 : set(A,solver=sparsesolver);
  488 :
  489 :
  490 : cout << "Construction vecteur - A^3 " << endl;
  491 :
  492 : {
  493 :  varf vrhs([u,v,p,f,g],[ut,vt,pt,ft,gt]) =
  494 :  int2d(th)(-( u2AA*dx(u1A) + (v2AA-vs2AA)*dy(u1A) )*ut
  495 :            -( u2AA*dx(v1A) + (v2AA-vs2AA)*dy(v1A) )*vt
  496 :            -( u1A*dx(u2AA) + (v1A-vs1A)*dy(u2AA) )*ut
  497 :            -( u1A*dx(v2AA) + (v1A-vs1A)*dy(v2AA) )*vt
  498 :             )+on(4,v=0.)+on(1,u=0.,v=0.);
  499 :
  500 : fuuppp<complex> [ru,rv,rp,rf,rg];
  501 : ru[]=vrhs(0,fuuppp,tgv=1);
  502 : rhs=0.0;
  503 : rhs(0:nft-2)=ru[];
  504 : };
  505 :
  506 : cout << "Fin Construction vecteur " << endl;
  507 :
  508 :
  509 : cout << "Resolution " << endl;
  510 : sol=A^-1*rhs;
  511 :
  512 :
  513 : u33[]=sol(0:nft-1);
  514 : cout << " ys= " << sol(nft-2) << endl;
  515 : cout << " vs= " << sol(nft-1) << endl;
  516 : cout << " Fy= " << int1d(th,2)(g33) << endl;
  517 : [ur,vr,pr,fr,gr]=[real(u33),real(v33),real(p33),real(f33),real(g33)];
  518 : plot(ur,value=1,wait=1,cmm="Mode3-AAA");
  519 :
  520 :
  521 : {
  522 : ofstream file(pathwnl+namewnl3AAA);
  523 : file << sol << endl;
  524 : };
  525 :
  526 :
  527 : {
  528 : ofstream file(pathwnl+namewnl3Coeffs);
  529 : file << alpha << endl;
  530 : file << beta << endl;
  531 : };
  532 :
  533 :
  534 :
  535 :
  536 :
  537 :
  538 :
  539 :
  540 :
  541 :
  542 :  sizestack + 1024 =27664  ( 26640 )
 
-----------------------------------------
--- Re        =  40
--- rhos/rhof =  50
--- omegas    =  0.657
-----------------------------------------
  --  mesh:  Nb of Triangles =  31727, Nb of Vertices 15955
eigA= (-9.29136e-006,0.662728)
Adj-eigA= (-9.29136e-006,-0.662728)
Normeaf= (-0.14082,0.133355)
Normeas= (1.14082,-0.133355)
Normea= (1,-7.21645e-016)
Construction matrice - u31
Assemblage matrice
  -- Block Matrix NxM = 4x4    nxm  =143232x143232 nb  none zero coef. 2759228
Fin Construction matrice
Factorisation matrice
Construction vecteur - Coeff Lineaire
Resolution
alpha= (0.101485,0.868171)
 ys= (0.0202627,0.0100757)
 vs= (-0.0154977,0.0124762)
 Fy= (-0.0449455,-0.0734699)
Construction vecteur - Coeff Mean Flow
Fin Construction vecteur
Resolution
beta-mean= (-3.44408e-005,0.00153484)
Construction vecteur - Coeff Harmonic
Fin Construction vecteur
Resolution
beta-harmo= (0.000131892,0.000173227)
beta-mean+harmo = (9.74515e-005,0.00170807)
Construction vecteur - Coeff Total
Fin Construction vecteur
Resolution
beta= (9.74515e-005,0.00170807)
 ys= (-3.78445e-005,-0.000302876)
 vs= (0.000217847,-2.21951e-005)
 Fy= (-0.000138963,0.000981162)
--------------------------------
--------------------------------
Construction matrice - u33
Assemblage matrice
  -- Block Matrix NxM = 3x3    nxm  =143231x143231 nb  none zero coef. 2568495
Fin Construction matrice
Factorisation matrice
Construction vecteur - A^3
Fin Construction vecteur
Resolution
 ys= (-2.5246e-008,7.8576e-009)
 vs= (-5.20745e-009,-1.67312e-008)
 Fy= (7.49445e-009,-2.33258e-009)
times: compile 0.692s, execution 91.676s,  mpirank:0
 ######## We forget of deleting   828 Nb pointer,   0Bytes  ,  mpirank 0, memory+Mode leak =0
 CodeAlloc : nb ptr  5762,  size :492680 mpirank: 0
Ok: Normal End
 try getConsole D:\marquet\Desktop\Etudes\SpringCylinder-WNL\wnl-wbc\Codes-wnl\F+ModeS-ordre-3-Coeffs+Mode.edp
